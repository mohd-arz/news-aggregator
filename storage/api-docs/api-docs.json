{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API",
        "description": "News Aggregator API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/",
            "description": "Local Server"
        }
    ],
    "paths": {
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "description": "Register a new user and return user details along with an authentication token",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                },
                                                "token": {
                                                    "description": "Authentication token",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed or something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login User",
                "description": "Authenticate user and return user details with an access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                },
                                                "token": {
                                                    "description": "Authentication token",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Credentials"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout User",
                "description": "Logout User",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "User Logout Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/dropdown/categories": {
            "get": {
                "tags": [
                    "DropDown"
                ],
                "summary": "Get Categories",
                "description": "Get Categories",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/dropdown/sources": {
            "get": {
                "tags": [
                    "DropDown"
                ],
                "summary": "Get Sources",
                "description": "Get Sources",
                "operationId": "getSources",
                "responses": {
                    "200": {
                        "description": "Sources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SourceResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/dropdown/authors": {
            "get": {
                "tags": [
                    "DropDown"
                ],
                "summary": "Get Authors",
                "description": "Get Authors",
                "operationId": "getAuthors",
                "responses": {
                    "200": {
                        "description": "Authors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AuthorResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get All News",
                "description": "Get all news from the database",
                "operationId": "getAllNews",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search by title or description or body",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "title"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Filter by source",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter by date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-02-16"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News Fetched Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NewsResource"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/for-you": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get News For You",
                "description": "Get prefferenced news from the database",
                "operationId": "getForYou",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search by title or description or body",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "title"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Filter by source",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter by date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-02-16"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News Fetched Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NewsResource"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/news/{news}": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get News",
                "description": "Get a single news from the database",
                "operationId": "getNews",
                "parameters": [
                    {
                        "name": "news",
                        "in": "path",
                        "description": "ID of the news",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News Fetched Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/NewsDetailsResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/preferences/set": {
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Set Preferences",
                "description": "Set Preferences",
                "operationId": "setPreferences",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetPreferenceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences set successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/preferences/get": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Get Preferences",
                "description": "Get Preferences",
                "operationId": "getPreferences",
                "responses": {
                    "200": {
                        "description": "Preferences",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GetPreferenceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "LoginRequest",
                "description": "Login Request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "Email of the User",
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "password": {
                        "description": "Password of the User",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "RegisterRequest",
                "description": "Register Request",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the User",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email of the User",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "description": "Password of the User",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "description": "Password Confirmation",
                        "type": "string",
                        "example": "password"
                    },
                    "status": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "SetPreferenceRequest": {
                "title": "SetPreferenceRequest",
                "description": "Request body for setting user preferences",
                "required": [
                    "preference_name",
                    "value"
                ],
                "properties": {
                    "preference_name": {
                        "description": "Array of preference names",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "source"
                        }
                    },
                    "value": {
                        "description": "Object containing preference values grouped by preference name",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 1
                            }
                        }
                    },
                    "status": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User Resource",
                "properties": {
                    "id": {
                        "description": "ID of the User",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the User",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email of the User",
                        "type": "string",
                        "example": "john.doe@example.com"
                    }
                },
                "type": "object"
            },
            "AuthorResource": {
                "title": "AuthorResource",
                "description": "Author Resource",
                "properties": {
                    "id": {
                        "description": "ID of the Author",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the Author",
                        "type": "string",
                        "example": "John Doe"
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "description": "Category Resource",
                "properties": {
                    "id": {
                        "description": "ID of the Category",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the Category",
                        "type": "string",
                        "example": "General"
                    }
                },
                "type": "object"
            },
            "SourceResource": {
                "title": "SourceResource",
                "description": "Source Resource",
                "properties": {
                    "id": {
                        "description": "ID of the Source",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the Source",
                        "type": "string",
                        "example": "BBC News"
                    }
                },
                "type": "object"
            },
            "NewsDetailsResource": {
                "title": "NewsDetailsResource",
                "description": "News Details Resource",
                "properties": {
                    "id": {
                        "description": "ID of the News",
                        "type": "integer",
                        "example": 1
                    },
                    "source": {
                        "description": "Source of the News",
                        "type": "string",
                        "example": "BBC"
                    },
                    "category": {
                        "description": "Category of the News",
                        "type": "string",
                        "example": "Technology"
                    },
                    "title": {
                        "description": "Title of the News",
                        "type": "string",
                        "example": "The title of the news"
                    },
                    "description": {
                        "description": "Description of the News",
                        "type": "string",
                        "example": "The description of the news"
                    },
                    "body": {
                        "description": "Body of the News",
                        "type": "string",
                        "example": "The body of the news"
                    },
                    "url": {
                        "description": "URL of the News",
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "author": {
                        "description": "Author of the News",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "url_to_image": {
                        "description": "URL to Image of the News",
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    },
                    "published_at": {
                        "description": "Published At of the News",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "NewsResource": {
                "title": "NewsResource",
                "description": "News Resource",
                "properties": {
                    "id": {
                        "description": "ID of the News",
                        "type": "integer",
                        "example": 1
                    },
                    "source": {
                        "description": "Source of the News",
                        "type": "string",
                        "example": "BBC"
                    },
                    "category": {
                        "description": "Category of the News",
                        "type": "string",
                        "example": "Technology"
                    },
                    "title": {
                        "description": "Title of the News",
                        "type": "string",
                        "example": "The title of the news"
                    },
                    "description": {
                        "description": "Description of the News",
                        "type": "string",
                        "example": "The description of the news"
                    },
                    "published_at": {
                        "description": "Published At of the News",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "UserAuthorResource": {
                "title": "AuthorResource",
                "description": "Author Resource",
                "properties": {
                    "id": {
                        "description": "ID of the Author",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the Author",
                        "type": "string",
                        "example": "John Doe"
                    }
                },
                "type": "object"
            },
            "UserCategoryResource": {
                "title": "CategoryResource",
                "description": "Category Resource",
                "properties": {
                    "id": {
                        "description": "ID of the Category",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the Category",
                        "type": "string",
                        "example": "Technology"
                    }
                },
                "type": "object"
            },
            "GetPreferenceResource": {
                "title": "GetPreferenceResource",
                "description": "Preference Resource",
                "properties": {
                    "categories": {
                        "description": "Categories of the User",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserCategoryResource"
                        }
                    },
                    "sources": {
                        "description": "Sources of the User",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSourceResource"
                        }
                    },
                    "authors": {
                        "description": "Authors of the User",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAuthorResource"
                        }
                    }
                },
                "type": "object"
            },
            "UserSourceResource": {
                "title": "SourceResource",
                "description": "Source Resource",
                "properties": {
                    "id": {
                        "description": "ID of the Source",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the Source",
                        "type": "string",
                        "example": "BBC"
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "title": "Pagination",
                "description": "Pagination response",
                "properties": {
                    "total": {
                        "type": "integer",
                        "example": 100
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://example.com?page=2"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": null
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "title": "SuccessResponse",
                "description": "Success Response",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Success message"
                    },
                    "data": {
                        "type": "object",
                        "example": {
                            "field_name": "value"
                        }
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "ErrorResponse",
                "description": "Error Response",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "field_name": [
                                "Error message"
                            ]
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "DropDown",
            "description": "DropDown"
        },
        {
            "name": "News",
            "description": "News"
        },
        {
            "name": "Preferences",
            "description": "Preferences"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}